{"version":3,"sources":["img/woman-avatar-dark.png","components/navbar.js","components/user-list.js","components/user-details.js","components/footer.js","components/metaTags.js","components/form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HeaderSec","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","scrollDown","onScroll","bind","assertThisInitialized","_this2","document","addEventListener","window","scrollY","setState","classes","react_default","a","createElement","className","for","class","id","type","placeholder","react_router_dom","to","React","Component","UserList","data","deleteUser","localStorage","getItem","JSON","parse","console","log","setStorage","fetch","then","response","json","setItem","stringify","nextProps","nextState","userId","updatedata","toConsumableArray","filter","items","_this3","Fragment","map","key","src","iconfinder","name","username","email","website","concat","value","onClick","e","confirm","UserDetail","renderRedirect","redirect","react_router","user","list","redirectState","match","params","find","element","from","location","avatar","phone","address","street","suite","city","zipcode","company","catchPhrase","bs","Footer","href","Tags","lib_default","content","Form","newUser","newlist","preventDefault","Math","floor","random","refs","uName","uUsername","uEmail","uWebsite","uPhone","uStreet","uSuite","uCity","uZipcode","cName","cPhrase","cBusiness","push","alert","_React$createElement","onSubmit","addUser","ref","required","defineProperty","App","metaTags","navbar","exact","path","component","footer","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22ecdbc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/woman-avatar-dark.d004c01f.png\";","import React from 'react';\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\n\n\nimport '../fontawesome/css/all.css';\n\n\nclass HeaderSec extends React.Component{\n\n   \n        constructor(props) {\n        super(props);\n    \n        this.state = {\n          scrollDown: true\n        };\n        this.onScroll = this.onScroll.bind(this);\n      }\n      componentDidMount() {\n        document.addEventListener('scroll', () => {\n          const scrollDown = window.scrollY < 5;\n          if (scrollDown !== this.state.scrollDown) {\n            this.onScroll(scrollDown);\n          }\n        })\n      }\n      onScroll(scrollDown) {\n        this.setState({ scrollDown });\n      }\n\n    render(){\n\n      let classes = '';\n      if(!this.state.scrollDown ){\n        classes += 'down';\n      }else {\n        classes -= 'down';\n      }\n        return(\n         \n            <header className={classes}>\n            <div className=\"wrap\">\n                    <div>\n                        <label for=\"search\"><i class=\"fas fa-search\"></i></label>\n                        <input id=\"search\" type=\"text\" placeholder=\"search\"></input>\n                    </div>\n        \n                <ul>\n                    \n                    <li><Link to=\"/\">Home</Link></li>\n                    <li><Link to=\"/addUser\">Add user</Link></li>\n                \n                </ul>\n        \n                </div>\n            </header>\n        )\n    }\n  }\n\nexport default HeaderSec;","\nimport React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport iconfinder from '../img/woman-avatar-dark.png';\nimport '../animate.css';\n\nclass UserList extends Component{\n    constructor(){\n        super();\n        this.state = {\n            // data : JSON.parse(localStorage.getItem('users')) ,\n           data : null\n        }\n    \n        this.deleteUser();\n    }\n    \n    componentWillMount() {\n         localStorage.getItem('users') && this.setState({\n             data :  JSON.parse(localStorage.getItem('users'))\n         })\n       \n      }\n\n    \n      componentDidMount() {\n        if (!localStorage.getItem(\"users\")) {\n            this.setStorage();\n          } else {\n            console.log(\"local storage\");\n          }\n        // if(!localStorage.getItem('users')){\n        //     // this.setStorage()\n        //     fetch(\"https://jsonplaceholder.typicode.com/users\")\n        //     .then(response => response.json())\n        //     .then(data =>\n        //       this.setState({\n        //         data\n        //       })\n        //     );\n        //     localStorage.setItem(\"users\", JSON.stringify(this.state.data));\n        // }else{\n\n        //     this.setState({\n        //         data : localStorage.setItem(\"users\", JSON.stringify(this.state.data))\n\n        //     })\n        // }\n        \n      }\n    \n      setStorage() {\n        let data = fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then((response) => {\n\n            localStorage.setItem('users',JSON.stringify(response));\n            this.setState({\n             data : JSON.parse(localStorage.getItem('users'))\n         })\n     })\n      }\n\n      componentWillUpdate(nextProps, nextState) {\n        localStorage.setItem(\"users\", JSON.stringify(nextState.data));\n      }\n    \n      \n\n\n   \n    deleteUser(userId){\n        if(this.state.data != null){\n            let data = [...this.state.data]\n                let updatedata = data.filter(items => items.id != userId)\n\n                this.setState({\n                    data : updatedata\n                })\n        }\n   \n      \n    }\n\n   \n\n   \n\n\n    render(){\n\n        return(\n            <React.Fragment>\n\n<section className=\"list\">\n\n                    <div className=\"wrap\">\n                        {\n                            this.state.data ?\n                            this.state.data.map((items) =>\n                            <div className=\"userBox\" key={items.id}>\n                            <figure>\n                                <img src={iconfinder}></img> \n                                <figcaption>\n                                     <div className=\"userInfo\">\n                                        <p>{items.name}</p>\n                                        <p>{items.username}</p>\n                                        <p>{items.email}</p>\n                                         <p>{items.website}</p>\n                                     </div>\n\n                                </figcaption>\n                            \n                             </figure>\n                             \n                                 <div className=\"btns\">\n                                     \n                                        <span className=\"seeMore\"><Link to={`/detail/${items.id}`}><i class=\"fas fa-external-link-alt\"></i> More</Link></span>\n                                        <span value={items.id} className=\"delete\" onClick={(e) =>window.confirm(\"Are you sure you want to delete this user?\") && this.deleteUser(items.id)}><i class=\"fas fa-user-times\"></i>delete</span>\n                                    \n                                 </div>\n                      </div> \n                      ) :\n                      <h3>loading...</h3>\n                        }\n                 \n                    </div>\n               </section>\n\n            </React.Fragment>\n\n        );\n    }\n}\nexport default UserList;","\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport avatar from '../img/woman-avatar-dark.png';\n\n\nclass UserDetail extends Component{\nconstructor(){\n    super();\n    this.state= {\n        user:null ,\n        list : JSON.parse(localStorage.getItem('users')),\n        redirectState : false\n}\n        this.deleteUser();\n        \n\n}\n\ncomponentDidMount () {\n   \n    const { id } = this.props.match.params;\n    console.log(id)\n    const user = this.state.list.find( element =>  element.id == id ) \n    \n    \n    this.setState({\n       user \n   })\n   console.log(this.state.user)  \n  }\n\n\n  deleteUser(userId){\n        \n    const list = [...this.state.list]\n    const updatedata = this.state.list.filter(user => user.id != userId)\n  \n    this.setState({\n        list : updatedata,\n        redirectState : true\n       \n    })\n  }\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/' />\n      \n      \n    }\n  }\n  componentWillUpdate(nextProps , nextState){\n    localStorage.setItem(\"users\" , JSON.stringify(nextState.list))\n\n}\n\n\n    render(){\n  \n        const { from } = this.props.location.state || '/'\n        const { redirectState } = this.state\n        return(\n        \n             <main>\n           \n                    <div className=\"wrap\">\n                        \n                    {\n                            this.state.user ?\n                            \n                            <React.Fragment>\n                    <div className=\"summery\">\n                        <figure>\n                            <img src={avatar}></img>\n                           \n                        </figure>\n                        <div className=\"suumery-info\">\n                            <h1>{this.state.user.name}</h1>\n                            <p>{this.state.user.username} </p>\n                            <p><i class=\"far fa-envelope\"></i> {this.state.user.email}</p>\n                            <p><i class=\"fas fa-phone-alt\"></i> {this.state.user.phone}</p>\n                            <span onClick={(e) =>window.confirm(\"Are you sure you want to delete this user?\") && this.deleteUser(this.state.user.id)}><span>delete user</span></span>\n                        </div>\n\n                        {redirectState && (\n                            <Redirect to={from}/>\n                        )}\n\n                        </div>\n                        <div className=\"details\">\n\n                        <table>\n                            <tbody>\n                            <tr>\n                                <td>id</td>\n                                <td>{this.state.user.id}</td>\n                            </tr>\n                            \n                            <tr>\n                                <td>street</td>\n                                <td>{this.state.user.address.street}</td>\n                            </tr>\n                            <tr>\n                                <td>suite</td>\n                                <td>{this.state.user.address.suite}</td>\n                            </tr>\n                            <tr>\n                                <td>city</td>\n                                <td>{this.state.user.address.city}</td>\n                            </tr>\n                            <tr>\n                                <td>zip code</td>\n                                <td>{this.state.user.address.zipcode}</td>\n                            </tr>\n                            \n                            <tr>\n                                <td>website</td>\n                                <td>{this.state.user.website}</td>\n                            </tr>\n                            <tr>\n                                <td>company Name</td>\n                                <td>{this.state.user.company.name}</td>\n                            </tr>\n                            <tr>\n                                <td>company catchPhrase</td>\n                                <td>{this.state.user.company.catchPhrase}</td>\n                            </tr>\n                            <tr>\n                                <td>company business</td>\n                                <td>{this.state.user.company.bs}</td>\n                            </tr>\n                            </tbody>\n                        </table>\n\n                    </div>  \n                    </React.Fragment>\n                      :  \n                                 <h3>not found</h3> \n                } \n                   \n                    </div>\n              \n                    </main>\n\n           \n\n\n\n        );\n    }\n}\n\nexport default UserDetail;\n","import React, { Component } from 'react';\n\n\n\nclass Footer extends Component{\n\n    render(){\n        return(\n\n            <React.Fragment>\n                <section className=\"footer\">\n                    <div class=\"wrap\">\n                    <ul>\n                        <li><a href=\"#\">about us</a></li>\n                        <li><a href=\"#\">contact</a></li>\n                        <li><a href=\"#\">HiroKet</a></li>\n                    </ul>\n\n                    <p>powered by HiroKet</p>\n                    </div>\n                </section>\n\n\n            </React.Fragment>\n\n        );\n    }\n}\nexport default Footer;","import React, { Component } from 'react';\nimport MetaTags from 'react-meta-tags';\n\nclass Tags extends React.Component{\n    render(){\n\n        return(\n            <MetaTags>\n           \n                <title>User List</title>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n            \n            \n            </MetaTags>\n        )\n    }\n\n\n\n}\nexport default Tags;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\n\n\nclass Form extends React.Component{\nconstructor (){\n    super();\n    this.state = {\n        newUser :\"\" ,\n        newlist : JSON.parse(localStorage.getItem('users')),\n        redirectState : false\n    }\n    \n    \n}\n\naddUser(e){\n    e.preventDefault() ;\n\n    \n    const newlist=[...this.state.newlist]\n    \n   \n   \n    const newUser ={\n\n        id: 10 + Math.floor(Math.random() * 100),  \n        name: this.refs.uName.value,\n        username: this.refs.uUsername.value,\n        email: this.refs.uEmail.value,\n        website: this.refs.uWebsite.value,\n        phone: this.refs.uPhone.value,\n\n        address :{\n            street:this.refs.uStreet.value,\n            suite: this.refs.uSuite.value,\n            city: this.refs.uCity.value,\n            zipcode: this.refs.uZipcode.value\n        },\n        \n        company :{\n            name : this.refs.cName.value,\n            catchPhrase :this.refs.cPhrase.value,\n            bs : this.refs.cBusiness.value\n        }\n      \n\n    }\n      \n    newlist.push(newUser);\n    this.setState({\n        newUser:\"\",\n        newlist,\n        redirectState :true\n    })\n    console.log(newlist);\n    alert('registration completed ')\n}\n\ncomponentWillUpdate(nextProps , nextState){\n    localStorage.setItem(\"users\" , JSON.stringify(nextState.newlist))\n\n}\nrender(){\n    const { from } = this.props.location.state || '/'\n    const { redirectState} = this.state\n    return(\n        <React.Fragment>\n            <div className=\"wrap\">\n                \n                <div className=\"form\">\n                <h1>register new user</h1>\n                <p>Please provide all required details to register new user\n                </p>\n                <form className=\"form-content\" onSubmit={(e) => {this.addUser(e)}}>\n                    <h3 className=\"title\">personal info:</h3>\n                    <div className=\"row\">\n                         <span>\n                             <input id=\"name\" ref = \"uName\" required/>\n                             <label for=\"name\">Name *</label>\n                        </span>\n                        <span>\n                            <input id=\"username\" ref=\"uUsername\" required/>\n                            <label for=\"username\">username *</label>\n                        </span>\n                    </div>\n                    <h3 className=\"title\">contact info:</h3>\n                    <div className=\"row\">\n                    <span>\n                       \n                            <input ref=\"email\" type=\"email\" ref=\"uEmail\" required/>\n                            <label for=\"email\">email *</label>\n                        </span>\n                        <span>\n                            <input id=\"website\" ref=\"uWebsite\"/>\n                            <label for=\"website\">website </label>\n                        </span>\n\n                        <span>\n                             <input id=\"phone\" type=\"tel\" ref=\"uPhone\" required/>\n                             <label for=\"phone\">phone *</label>\n                        </span>\n                    </div>\n                    <h3 className=\"title\">address :</h3>\n                    <div className=\"row\">\n\n                        <span>\n                        <input id=\"street\" ref=\"uStreet\"/>\n                            <label for=\"street\">street </label>\n                            \n                        </span>\n\n                        <span>\n                        <input id=\"suite\" ref=\"uSuite\"/>\n                            <label for=\"suite\">suite </label>\n                            \n                        </span>\n\n                        <span>\n                        <input id=\"city\" ref=\"uCity\"/>\n                            <label for=\"city\">city </label>\n                            \n                        </span>\n                        <span>\n                            <input id=\"zipcode\" ref=\"uZipcode\"/>   \n                             <label for=\"zipcode\">zipcode </label>\n                            \n                         </span>\n                    </div>\n                    <h3 className=\"title\">company info:</h3>\n                    <div className=\"row\">\n                          <span>\n                              <input id=\"company-name\" ref=\"cName\" required/>\n                              <label for=\"company-name\">company name *</label>\n                       \n                            </span>\n                            <span>\n                                 <input id=\"company-phrase\" ref=\"cPhrase\"/>\n                                <label for=\"company-phrase\">company phrase </label>\n                       \n                            </span>\n                            <span>\n\n                                 <input id=\"company-bs\" ref=\"cBusiness\" />\n                                 <label for=\"company-bs\">company-business </label>\n\n                            </span>\n                    </div>\n\n                    <div className=\"row buttons\">\n                        <input type=\"submit\" />\n                        <input type=\"reset\" />\n                    </div>\n                </form>\n\n                {redirectState && (\n          <Redirect to={from}/>\n        )}\n                </div>\n            </div>\n\n\n\n        </React.Fragment>\n      \n    );\n}\n\n\n}\nexport default Form;","import React, { Component } from \"react\";\nimport \"./components/style/style.css\";\nimport HeaderSec from \"./components/navbar\";\nimport \"./App.css\";\nimport \"./fontawesome/css/all.css\";\nimport UserList from \"./components/user-list\";\nimport UserDetail from \"./components/user-details\";\nimport Footer from \"./components/footer\";\nimport Tags from \"./components/metaTags\";\nimport Form from \"./components/form\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport \"./animate.css\";\n\nclass App extends Component {\n  \n\n  render() {\n    return (\n      <React.Fragment>\n        <Tags />\n\n        <Router>\n          <HeaderSec />\n\n          <Route exact path=\"/\" component={UserList} />\n          <Route path=\"/detail/:id\" component={UserDetail} />\n          <Route path=\"/addUser\" component={Form} />\n        </Router>\n\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}